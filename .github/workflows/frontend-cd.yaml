# Following references have been used:
# 1) Material available in the Udacity classroom exercises 
# 2) Official documentation for GitHub Action:
# https://github.com/aws-actions/amazon-ecr-login
# https://github.com/actions/setup-node

# Workflow name
name: frontend-cd-workflow

# Triggers
on:
  # Manual trigger using the workflow_dispatch event
  workflow_dispatch:
  # Automatic trigger on pull request events targeting the main branch
  pull_request:
    types:
      - closed
    branches:
      - main

# Jobs defined in the workflow
jobs:
  linting:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Node.js 
        uses: actions/setup-node@v4
        with:
          node-version: latest
      # Perform a cache action to restore cache before dependency install
      
      - name: Install dependencies
        run: cd frontend && npm ci

      - name: Run the linter
        run: cd frontend && npm run lint -- --fix 

  testing:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js 
        uses: actions/setup-node@v4
        with:
          node-version: latest
      # Perform a cache action to restore cache before dependency install

      - name: Install dependencies
        run: cd frontend && npm ci

      - name: Run tests
        run: cd frontend && npm test

  build:
    needs: [linting, testing]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js 
        uses: actions/setup-node@v4
        with:
          node-version: latest
      # Perform a cache action to restore cache before dependency install

      - name: Install dependencies
        run: cd frontend && npm ci

      - name: Create environment variable
        run: REACT_APP_MOVIE_API_URL=http://localhost:5000 

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}  
  
      - name: Set up ECR login
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Built docker image with SHA
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: my-ecr-repo
          IMAGE_TAG: ${{ github.sha }}
        run: cd frontend && docker build --build-arg=REACT_APP_MOVIE_API_URL -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
       
      - name: Push to ECR 
        run:  docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

      - name: Deploy application to EKS cluster
        run: cd frontend && kubectl apply -f k8s/
